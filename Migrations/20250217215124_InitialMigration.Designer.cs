// <auto-generated />
using AnimeTracker.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnimeTracker.Migrations
{
    [DbContext(typeof(ATDbContext))]
    [Migration("20250217215124_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("AnimeTracker.Database.DTO.AnimeDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Anime");
                });

            modelBuilder.Entity("AnimeTracker.Database.DTO.ListSelfDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AnimeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<float?>("Rating")
                        .HasColumnType("REAL");

                    b.Property<bool>("Watched")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AnimeId");

                    b.HasIndex("MovieId");

                    b.ToTable("ListSelf");
                });

            modelBuilder.Entity("AnimeTracker.Database.DTO.ListTogetherDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AnimeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("People")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float?>("Rating")
                        .HasColumnType("REAL");

                    b.Property<bool>("Watched")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AnimeId");

                    b.HasIndex("MovieId");

                    b.ToTable("ListTogether");
                });

            modelBuilder.Entity("AnimeTracker.Database.DTO.MovieDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("AnimeTracker.Database.DTO.QueueSelfDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ListSelfDTOId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ListSelfId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ListSelfDTOId");

                    b.ToTable("QueueSelf");
                });

            modelBuilder.Entity("AnimeTracker.Database.DTO.QueueTogetherDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ListTogetherDTOId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QueueTogetherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ListTogetherDTOId");

                    b.ToTable("QueueTogether");
                });

            modelBuilder.Entity("AnimeTracker.Database.DTO.ListSelfDTO", b =>
                {
                    b.HasOne("AnimeTracker.Database.DTO.AnimeDTO", "Anime")
                        .WithMany()
                        .HasForeignKey("AnimeId");

                    b.HasOne("AnimeTracker.Database.DTO.MovieDTO", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId");

                    b.Navigation("Anime");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("AnimeTracker.Database.DTO.ListTogetherDTO", b =>
                {
                    b.HasOne("AnimeTracker.Database.DTO.AnimeDTO", "Anime")
                        .WithMany()
                        .HasForeignKey("AnimeId");

                    b.HasOne("AnimeTracker.Database.DTO.MovieDTO", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId");

                    b.Navigation("Anime");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("AnimeTracker.Database.DTO.QueueSelfDTO", b =>
                {
                    b.HasOne("AnimeTracker.Database.DTO.ListSelfDTO", "ListSelfDTO")
                        .WithMany()
                        .HasForeignKey("ListSelfDTOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListSelfDTO");
                });

            modelBuilder.Entity("AnimeTracker.Database.DTO.QueueTogetherDTO", b =>
                {
                    b.HasOne("AnimeTracker.Database.DTO.ListTogetherDTO", "ListTogetherDTO")
                        .WithMany()
                        .HasForeignKey("ListTogetherDTOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListTogetherDTO");
                });
#pragma warning restore 612, 618
        }
    }
}
